version: '3'
services:

    rabbit.mq:
        image: rabbitmq:3.10.20-management-alpine
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        environment:
            RABBITMQ_DEFAULT_USER: user
            RABBITMQ_DEFAULT_PASS: password
        networks:
            - rabbit_network
        ports:
            - "5672:5672"
            - "15672:15672"

    nginx.balance:
        image: nginx:alpine
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        networks:
            - rabbit_network
        depends_on:
            - vue.front
            - socket.jonny
            - socket.sunny
            - rabbit.producer
        ports:
            - "80:80"

    vue.front:
        build: ./front_vue
        command: sh -c "npm install && npm run dev"
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./front_vue:/usr/src/app
        ports:
            - "5173:5173"
        networks:
            - rabbit_network

    redis:
        image: 'redis:alpine'
        ports:
            - "6377:6379"
        volumes:
            - ./redis/data:/data
        networks:
            - rabbit_network

    socket.sunny:
        build: ./sockets
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./sockets:/usr/src/app
        networks:
            - rabbit_network
        depends_on:
            - redis
        expose:
            - "3000"
        environment:
            - NAME=Sunny

    socket.jonny:
        build: ./sockets
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./sockets:/usr/src/app
        networks:
            - rabbit_network
        depends_on:
            - redis
        expose:
            - "3000"
        environment:
            - NAME=Jonny

    rabbit.producer:
        build: ./nodejs_producer
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./nodejs_producer:/usr/src/app
        networks:
            - rabbit_network
        depends_on:
            - redis
            - rabbit.mq
        expose:
            - "3000"
        environment:
            - NAME=Producer

    rabbit.consumer:
        build: ./nodejs_consumer
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        volumes:
            - ./nodejs_consumer:/usr/src/app
        networks:
            - rabbit_network
        depends_on:
            - redis
            - rabbit.mq
        expose:
            - "3000"
        environment:
            - NAME=Consumer


    db.cars:
        image: 'mysql/mysql-server:latest'
#        ports:
#            - '3355:3306'
        environment:
            MYSQL_ROOT_PASSWORD: 'password!23'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: 'cars_base'
            MYSQL_USER: 'user_cars'
            MYSQL_PASSWORD: 'password'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - './db.cars:/var/lib/mysql'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - rabbit_network

    phpmyadmin:
        image: phpmyadmin
        ports:
            - 3356:80
        environment:
            - PMA_ARBITRARY=1
            - UPLOAD_LIMIT=128M
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - rabbit_network
        depends_on:
            -   db.cars

networks:
    rabbit_network:
        driver: bridge
